{"version":3,"sources":["webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts","webpack:///../../../src/components/VCombobox/VCombobox.ts","webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///../../../src/components/VForm/VForm.ts","webpack:///./src/service/domain/ModeloService.js","webpack:///./node_modules/core-js/modules/es.string.ends-with.js","webpack:///../../../src/components/VCard/index.ts","webpack:///../../../src/components/VCard/VCard.ts","webpack:///./src/service/domain/MarcaService.js"],"names":["baseMixins","name","directives","ClickOutside","props","dark","disabled","fullscreen","light","maxWidth","type","String","default","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","data","activatedBy","animate","animateTimeout","isActive","this","stackMinZIndex","computed","classes","contentClasses","hasActivator","Boolean","$slots","$scopedSlots","watch","created","$attrs","hasOwnProperty","beforeMount","beforeDestroy","window","unbind","methods","animateClick","closeConditional","target","e","_isDestroyed","$refs","content","contains","overlay","$el","activeZIndex","hideScroll","document","show","bind","onClickOutside","onKeydown","getOpenDependents","activator","onFocusin","getOpenDependentElements","some","el","focusable","querySelectorAll","genContent","showLazyContent","root","class","attrs","role","tabindex","on","keydown","style","zIndex","ref","genTransition","$createElement","appear","genInnerContent","value","handler","include","transformOrigin","undefined","render","h","staticClass","attach","defaultMenuProps","offsetY","offsetOverflow","VSelect","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","lazySearch","selectedIndex","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","length","currentRange","selectedItem","getText","internalSearch","allItems","text","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","internalValue","isFocused","input","isMenuActive","val","oldVal","activateMenu","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","VTextField","mergeData","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","onInput","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event","delimiters","returnObject","editingIndex","computedCounterValue","delimiter","d","genChipSelection","chip","dblclick","onChipInput","onEnterDown","getMenuIndex","selectionStart","setValue","updateEditing","updateCombobox","isUsingSlot","updateTags","menuIndex","index","onPaste","pastedItemText","findExistingIndex","provide","form","inheritAttrs","lazyValidation","readonly","inputs","watchers","errorBag","errors","Object","deep","immediate","watchInput","watcher","_uid","valid","shouldValidate","validate","reset","resetErrorBag","setTimeout","resetValidation","register","unregister","found","unwatch","novalidate","attrs$","submit","ModeloService","Rest","$","getOwnPropertyDescriptor","f","toLength","notARegExp","requireObjectCoercible","correctIsRegExpLogic","IS_PURE","nativeEndsWith","endsWith","min","Math","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","descriptor","prototype","writable","proto","forced","searchString","that","endPosition","arguments","len","end","search","call","slice","VCardActions","VCardSubtitle","VCardText","VCardTitle","flat","hover","img","link","loaderHeight","Number","raised","styles","genProgress","key","tag","setBackgroundColor","MarcaService"],"mappings":"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","file":"js/dispositivos~modelos.1bb8a4d0.js","sourcesContent":["// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode, VNodeData } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      this.$nextTick(() => {\n        this.$refs.content.focus()\n        this.bind()\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        const el = [...focusable].find(el => !el.hasAttribute('disabled')) as HTMLElement | undefined\n        el && el.focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data: VNodeData = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: {\n              handler: this.onClickOutside,\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {\n          transformOrigin: this.origin,\n        },\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          ...data.style as object,\n          maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n          width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    },\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | undefined>,\n      default: undefined,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | undefined {\n        return this.lazySearch\n      },\n      set (val: any) {\n        this.lazySearch = val\n\n        this.$emit('update:search-input', val)\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = undefined\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : undefined)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = undefined\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections () {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any) {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData!.setData('text/plain', currentItemText)\n      event.clipboardData!.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n","// Styles\nimport '../VAutocomplete/VAutocomplete.sass'\n\n// Extensions\nimport VSelect from '../VSelect/VSelect'\nimport VAutocomplete from '../VAutocomplete/VAutocomplete'\n\n// Utils\nimport { keyCodes } from '../../util/helpers'\n\n// Types\nimport { PropType } from 'vue'\n\n/* @vue/component */\nexport default VAutocomplete.extend({\n  name: 'v-combobox',\n\n  props: {\n    delimiters: {\n      type: Array as PropType<string[]>,\n      default: () => ([]),\n    },\n    returnObject: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data: () => ({\n    editingIndex: -1,\n  }),\n\n  computed: {\n    computedCounterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.internalSearch || '').toString().length\n    },\n    hasSlot (): boolean {\n      return VSelect.options.computed.hasSlot.call(this) || this.multiple\n    },\n    isAnyValueAllowed (): boolean {\n      return true\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems ||\n        (!!this.$slots['no-data'] && !this.hideNoData)\n    },\n  },\n\n  methods: {\n    onInternalSearchChanged (val: any) {\n      if (\n        val &&\n        this.multiple &&\n        this.delimiters.length\n      ) {\n        const delimiter = this.delimiters.find(d => val.endsWith(d))\n        if (delimiter != null) {\n          this.internalSearch = val.slice(0, val.length - delimiter.length)\n          this.updateTags()\n        }\n      }\n\n      this.updateMenuDimensions()\n    },\n    genInput () {\n      const input = VAutocomplete.options.methods.genInput.call(this)\n\n      delete input.data!.attrs!.name\n      input.data!.on!.paste = this.onPaste\n\n      return input\n    },\n    genChipSelection (item: object, index: number) {\n      const chip = VSelect.options.methods.genChipSelection.call(this, item, index)\n\n      // Allow user to update an existing value\n      if (this.multiple) {\n        chip.componentOptions!.listeners! = {\n          ...chip.componentOptions!.listeners!,\n          dblclick: () => {\n            this.editingIndex = index\n            this.internalSearch = this.getText(item)\n            this.selectedIndex = -1\n          },\n        }\n      }\n\n      return chip\n    },\n    onChipInput (item: object) {\n      VSelect.options.methods.onChipInput.call(this, item)\n\n      this.editingIndex = -1\n    },\n    // Requires a manual definition\n    // to overwrite removal in v-autocomplete\n    onEnterDown (e: Event) {\n      e.preventDefault()\n      // If has menu index, let v-select-list handle\n      if (this.getMenuIndex() > -1) return\n\n      this.$nextTick(this.updateSelf)\n    },\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      if (!this.autoSelectFirst) return\n\n      VAutocomplete.options.methods.onFilteredItemsChanged.call(this, val, oldVal)\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      VSelect.options.methods.onKeyDown.call(this, e)\n\n      // If user is at selection index of 0\n      // create a new tag\n      if (this.multiple &&\n        keyCode === keyCodes.left &&\n        this.$refs.input.selectionStart === 0\n      ) {\n        this.updateSelf()\n      } else if (keyCode === keyCodes.enter) {\n        this.onEnterDown(e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onTabDown (e: KeyboardEvent) {\n      // When adding tags, if searching and\n      // there is not a filtered options,\n      // add the value to the tags list\n      if (this.multiple &&\n        this.internalSearch &&\n        this.getMenuIndex() === -1\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        return this.updateTags()\n      }\n\n      VAutocomplete.options.methods.onTabDown.call(this, e)\n    },\n    selectItem (item: object) {\n      // Currently only supports items:<string[]>\n      if (this.editingIndex > -1) {\n        this.updateEditing()\n      } else {\n        VAutocomplete.options.methods.selectItem.call(this, item)\n      }\n    },\n    setSelectedItems () {\n      if (this.internalValue == null ||\n        this.internalValue === ''\n      ) {\n        this.selectedItems = []\n      } else {\n        this.selectedItems = this.multiple ? this.internalValue : [this.internalValue]\n      }\n    },\n    setValue (value?: any) {\n      VSelect.options.methods.setValue.call(this, value != null ? value : this.internalSearch)\n    },\n    updateEditing () {\n      const value = this.internalValue.slice()\n      value[this.editingIndex] = this.internalSearch\n\n      this.setValue(value)\n\n      this.editingIndex = -1\n    },\n    updateCombobox () {\n      const isUsingSlot = Boolean(this.$scopedSlots.selection) || this.hasChips\n\n      // If search is not dirty and is\n      // using slot, do nothing\n      if (isUsingSlot && !this.searchIsDirty) return\n\n      // The internal search is not matching\n      // the internal value, update the input\n      if (this.internalSearch !== this.getText(this.internalValue)) this.setValue()\n\n      // Reset search if using slot\n      // to avoid a double input\n      if (isUsingSlot) this.internalSearch = undefined\n    },\n    updateSelf () {\n      this.multiple ? this.updateTags() : this.updateCombobox()\n    },\n    updateTags () {\n      const menuIndex = this.getMenuIndex()\n\n      // If the user is not searching\n      // and no menu item is selected\n      // do nothing\n      if (menuIndex < 0 &&\n        !this.searchIsDirty\n      ) return\n\n      if (this.editingIndex > -1) {\n        return this.updateEditing()\n      }\n\n      const index = this.selectedItems.indexOf(this.internalSearch)\n      // If it already exists, do nothing\n      // this might need to change to bring\n      // the duplicated item to the last entered\n      if (index > -1) {\n        const internalValue = this.internalValue.slice()\n        internalValue.splice(index, 1)\n\n        this.setValue(internalValue)\n      }\n\n      // If menu index is greater than 1\n      // the selection is handled elsewhere\n      // TODO: find out where\n      if (menuIndex > -1) return (this.internalSearch = null)\n\n      this.selectItem(this.internalSearch)\n      this.internalSearch = null\n    },\n    onPaste (event: ClipboardEvent) {\n      if (!this.multiple || this.searchIsDirty) return\n\n      const pastedItemText = event.clipboardData!.getData('text/vnd.vuetify.autocomplete.item+plain')\n      if (pastedItemText && this.findExistingIndex(pastedItemText as any) === -1) {\n        event.preventDefault()\n        VSelect.options.methods.selectItem.call(this, pastedItemText as any)\n      }\n    },\n  },\n})\n","import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","// Components\nimport VInput from '../VInput/VInput'\n\n// Mixins\nimport mixins from '../../util/mixins'\nimport BindsAttrs from '../../mixins/binds-attrs'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Helpers\nimport { VNode } from 'vue'\n\ntype ErrorBag = Record<number, boolean>\ntype VInputInstance = InstanceType<typeof VInput>\ntype Watchers = {\n  _uid: number\n  valid: () => void\n  shouldValidate: () => void\n}\n\n/* @vue/component */\nexport default mixins(\n  BindsAttrs,\n  RegistrableProvide('form')\n  /* @vue/component */\n).extend({\n  name: 'v-form',\n\n  provide (): object {\n    return { form: this }\n  },\n\n  inheritAttrs: false,\n\n  props: {\n    disabled: Boolean,\n    lazyValidation: Boolean,\n    readonly: Boolean,\n    value: Boolean,\n  },\n\n  data: () => ({\n    inputs: [] as VInputInstance[],\n    watchers: [] as Watchers[],\n    errorBag: {} as ErrorBag,\n  }),\n\n  watch: {\n    errorBag: {\n      handler (val) {\n        const errors = Object.values(val).includes(true)\n\n        this.$emit('input', !errors)\n      },\n      deep: true,\n      immediate: true,\n    },\n  },\n\n  methods: {\n    watchInput (input: any): Watchers {\n      const watcher = (input: any): (() => void) => {\n        return input.$watch('hasError', (val: boolean) => {\n          this.$set(this.errorBag, input._uid, val)\n        }, { immediate: true })\n      }\n\n      const watchers: Watchers = {\n        _uid: input._uid,\n        valid: () => {},\n        shouldValidate: () => {},\n      }\n\n      if (this.lazyValidation) {\n        // Only start watching inputs if we need to\n        watchers.shouldValidate = input.$watch('shouldValidate', (val: boolean) => {\n          if (!val) return\n\n          // Only watch if we're not already doing it\n          if (this.errorBag.hasOwnProperty(input._uid)) return\n\n          watchers.valid = watcher(input)\n        })\n      } else {\n        watchers.valid = watcher(input)\n      }\n\n      return watchers\n    },\n    /** @public */\n    validate (): boolean {\n      return this.inputs.filter(input => !input.validate(true)).length === 0\n    },\n    /** @public */\n    reset (): void {\n      this.inputs.forEach(input => input.reset())\n      this.resetErrorBag()\n    },\n    resetErrorBag () {\n      if (this.lazyValidation) {\n        // Account for timeout in validatable\n        setTimeout(() => {\n          this.errorBag = {}\n        }, 0)\n      }\n    },\n    /** @public */\n    resetValidation () {\n      this.inputs.forEach(input => input.resetValidation())\n      this.resetErrorBag()\n    },\n    register (input: VInputInstance) {\n      this.inputs.push(input)\n      this.watchers.push(this.watchInput(input))\n    },\n    unregister (input: VInputInstance) {\n      const found = this.inputs.find(i => i._uid === input._uid)\n\n      if (!found) return\n\n      const unwatch = this.watchers.find(i => i._uid === found._uid)\n      if (unwatch) {\n        unwatch.valid()\n        unwatch.shouldValidate()\n      }\n\n      this.watchers = this.watchers.filter(i => i._uid !== found._uid)\n      this.inputs = this.inputs.filter(i => i._uid !== found._uid)\n      this.$delete(this.errorBag, found._uid)\n    },\n  },\n\n  render (h): VNode {\n    return h('form', {\n      staticClass: 'v-form',\n      attrs: {\n        novalidate: true,\n        ...this.attrs$,\n      },\n      on: {\n        submit: (e: Event) => this.$emit('submit', e),\n      },\n    }, this.$slots.default)\n  },\n})\n","import Rest from '../Rest'\r\n\r\n/**\r\n * @typedef {ModeloService}\r\n */\r\nexport default class ModeloService extends Rest {\r\n    /**\r\n     * @type {String}\r\n     */\r\n    static resource = '/modelos'\r\n}","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeEndsWith = ''.endsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.endsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.endswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  endsWith: function endsWith(searchString /* , endPosition = @length */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var endPosition = arguments.length > 1 ? arguments[1] : undefined;\n    var len = toLength(that.length);\n    var end = endPosition === undefined ? len : min(toLength(endPosition), len);\n    var search = String(searchString);\n    return nativeEndsWith\n      ? nativeEndsWith.call(that, search, end)\n      : that.slice(end - search.length, end) === search;\n  }\n});\n","import VCard from './VCard'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nconst VCardActions = createSimpleFunctional('v-card__actions')\nconst VCardSubtitle = createSimpleFunctional('v-card__subtitle')\nconst VCardText = createSimpleFunctional('v-card__text')\nconst VCardTitle = createSimpleFunctional('v-card__title')\n\nexport {\n  VCard,\n  VCardActions,\n  VCardSubtitle,\n  VCardText,\n  VCardTitle,\n}\n\nexport default {\n  $_vuetify_subcomponents: {\n    VCard,\n    VCardActions,\n    VCardSubtitle,\n    VCardText,\n    VCardTitle,\n  },\n}\n","// Styles\nimport './VCard.sass'\n\n// Extensions\nimport VSheet from '../VSheet'\n\n// Mixins\nimport Loadable from '../../mixins/loadable'\nimport Routable from '../../mixins/routable'\n\n// Helpers\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Loadable,\n  Routable,\n  VSheet\n).extend({\n  name: 'v-card',\n\n  props: {\n    flat: Boolean,\n    hover: Boolean,\n    img: String,\n    link: Boolean,\n    loaderHeight: {\n      type: [Number, String],\n      default: 4,\n    },\n    raised: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-card': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-card--flat': this.flat,\n        'v-card--hover': this.hover,\n        'v-card--link': this.isClickable,\n        'v-card--loading': this.loading,\n        'v-card--disabled': this.disabled,\n        'v-card--raised': this.raised,\n        ...VSheet.options.computed.classes.call(this),\n      }\n    },\n    styles (): object {\n      const style: Dictionary<string> = {\n        ...VSheet.options.computed.styles.call(this),\n      }\n\n      if (this.img) {\n        style.background = `url(\"${this.img}\") center center / cover no-repeat`\n      }\n\n      return style\n    },\n  },\n\n  methods: {\n    genProgress () {\n      const render = Loadable.options.methods.genProgress.call(this)\n\n      if (!render) return null\n\n      return this.$createElement('div', {\n        staticClass: 'v-card__progress',\n        key: 'progress',\n      }, [render])\n    },\n  },\n\n  render (h): VNode {\n    const { tag, data } = this.generateRouteLink()\n\n    data.style = this.styles\n\n    if (this.isClickable) {\n      data.attrs = data.attrs || {}\n      data.attrs.tabindex = 0\n    }\n\n    return h(tag, this.setBackgroundColor(this.color, data), [\n      this.genProgress(),\n      this.$slots.default,\n    ])\n  },\n})\n","import Rest from '../Rest'\r\n\r\n/**\r\n * @typedef {MarcaService}\r\n */\r\nexport default class MarcaService extends Rest {\r\n    /**\r\n     * @type {String}\r\n     */\r\n    static resource = '/marcas'\r\n}"],"sourceRoot":""}